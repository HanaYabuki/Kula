declaration =   funcDecl
            |   classDecl
            |   statement
            ;

funcDecl    =   "func" IDENTIFIER lambda
            ;

classDecl   =   "class" IDENTIFIER (":" IDENTIFIER)? "{" (constructor | lambda)* "}"
            ;

constructor =   "(" parameters? ")" ":" "(" parameters? ")" block
            |   lambda
            ;

statement   =   exprStmt
            |   ifStmt
            |   whileStmt
            |   printStmt
            |   returnStmt
            |   forStmt
            |   block
            ;

exprStmt    =   expression ";" ;

ifStmt      =   "if" "(" expression ")" statement ("else" statement)? 
            ;

whileStmt   =   "while" "(" expression ")" statement 
            ;

printStmt   =   "print" statement 
            ;

returnStmt  =   "return" statement? 
            ;

forStmt     =   "for" "(" (exprStmt | ";") expression? ";" expression? ")" statement 
            ;

block       =   "{" declaration* "}" 
            ;
